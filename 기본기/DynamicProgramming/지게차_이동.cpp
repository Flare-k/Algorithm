#include <iostream>
using namespace std;

int map[21][21];
int acc[22][22] = {0};
int dir[21][21];
int H, W;

void init() {
    cin >> H >> W;
    for (int i = 0; i < H; i++) {
        for (int j = 0; j < W; j++) {
            cin >> map[i][j];
        }
    }


    for (int i = 0; i < H + 1; i++) {
        acc[i][W] = 999;
    }

    for (int i = 0; i < W + 1; i++) {
        acc[H][i] = 999;
    }
    
    H--;
    W--;
}

enum {
    DOWN,
    RIGHT
};

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    init();

    for (int i = H; i >= 0; i--) {
        for (int j = W; j >= 0; j--) {
            if (i == H && j == W) continue;

            if (acc[i][j + 1] < acc[i + 1][j]) {    // right가 작을 경우
                acc[i][j] = acc[i][j + 1] + map[i][j];
                dir[i][j] = RIGHT;
            }
            else {
                acc[i][j] = acc[i + 1][j] + map[i][j];
                dir[i][j] = DOWN;
            }
        }
    }

    int nx = 0;
    int ny = 0;

    cout << acc[0][0] << '\n';
    while (1) {
        cout <<  nx << "," << ny << "\n";

        if (nx == H && ny == W) break;
        if (dir[nx][ny] == RIGHT) ny++;
        else nx++;
    }


    return 0;
}


/*

4 4
0 3 5 1
1 1 1 5
1 50 20 10
1 50 5 0

>
18
0,0
1,0
1,1
1,2
1,3
2,3
3,3

------------------

20 20
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 0

>
81
0,0
1,0
2,0
3,0
4,0
5,0
6,0
7,0
8,0
9,0
10,0
11,0
12,0
13,0
14,0
15,0
16,0
17,0
18,0
19,0
19,1
19,2
19,3
19,4
19,5
19,6
19,7
19,8
19,9
19,10
19,11
19,12
19,13
19,14
19,15
19,16
19,17
19,18
19,19

------------------

10 7
0 50 30 20 1 41 11
0 60 20 10 7 61 21
0 99 1 5 2 16 11
0 99 1 7 1 26 21
0 99 1 2 99 34 51
0 99 1 3 1 2 41
0 99 1 6 1 99 99
0 99 1 1 2 1 1
0 99 1 44 99 99 1
0 200 4 1 1 5 0

>
92
0,0
1,0
1,1
1,2
2,2
3,2
4,2
5,2
6,2
7,2
7,3
7,4
7,5
7,6
8,6
9,6
*/